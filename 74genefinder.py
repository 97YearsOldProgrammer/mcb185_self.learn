seqs = '''AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTGAACTGGTTACCTGCCGTGAGTAAATTAAAATTTTATTGACTTAGGTCACTAAATACTTTAACCAATATAGGCATAGCGCACAGAC
AGATAAAAATTACAGAGTACACAACATCCATGAAACGCATTAGCACCACCATTACCACCACCATCACCATTACCACAGGTAACGGTGCGGGCTGACGCGTACAGGAAACACAGAAAAAAGCCCGCACCTGACAGTGCGGGCTTTTTTTTTCGACCAAAGG
TAACGAGGTAACAACCATGCGAGTGTTGAAGTTCGGCGGTACATCAGTGGCAAATGCAGAACGTTTTCTGCGTGTTGCCGATATTCTGGAAAGCAATGCCAGGCAGGGGCAGGTGGCCACCGTCCTCTCTGCCCCCGCCAAAATCACCAACCACCTGGTG
GCGATGATTGAAAAAACCATTAGCGGCCAGGATGCTTTACCCAATATCAGCGATGCCGAACGTATTTTTGCCGAACTTTTGACGGGACTCGCCGCCGCCCAGCCGGGGTTCCCGCTGGCGCAATTGAAAACTTTCGTCGATCAGGAATTTGCCCAAATAA
AACATGTCCTGCATGGCATTAGTTTGTTGGGGCAGTGCCCGGATAGCATCAACGCTGCGCTGATTTGCCGTGGCGAGAAAATGTCGATCGCCATTATGGCCGGCGTATTAGAAGCGCGCGGTCACAACGTTACTGTTATCGATCCGGTCGAAAAACTGCT
GGCAGTGGGGCATTACCTCGAATCTACCGTCGATATTGCTGAGTCCACCCGCCGTATTGCGGCAAGCCGCATTCCGGCTGATCACATGGTGCTGATGGCAGGTTTCACCGCCGGTAATGAAAAAGGCGAACTGGTGGTGCTTGGACGCAACGGTTCCGAC
TACTCTGCTGCGGTGCTGGCTGCCTGTTTACGCGCCGATTGTTGCGAGATTTGGACGGACGTTGACGGGGTCTATACCTGCGACCCGCGTCAGGTGCCCGATGCGAGGTTGTTGAAGTCGATGTCCTACCAGGAAGCGATGGAGCTTTCCTACTTCGGCG
CTAAAGTTCTTCACCCCCGCACCATTACCCCCATCGCCCAGTTCCAGATCCCTTGCCTGATTAAAAATACCGGAAATCCTCAAGCACCAGGTACGCTCATTGGTGCCAGCCGTGATGAAGACGAATTACCGGTCAAGGGCATTTCCAATCTGAATAACAT
GGCAATGTTCAGCGTTTCTGGTCCGGGGATGAAAGGGATGGTCGGCATGGCGGCGCGCGTCTTTGCAGCGATGTCACGCGCCCGTATTTCCGTGGTGCTGATTACGCAATCATCTTCCGAATACAGCATCAGTTTCTGCGTTCCACAAAGCGACTGTGTG
CGAGCTGAACGGGCAATGCAGGAAGAGTTCTACCTGGAACTGAAAGAAGGCTTACTGGAGCCGCTGGCAGTGACGGAACG'''

import mcb185
import math
import sys


minu = sys.argv[1]

" this is the test version of this; not really fasta file, segment"

# forward sequence

seq = ''.join(seqs)




print(x, y, y1 , y2)


x  = seq.find('ATG')

while y != -1 and y1 != -1 and y2 != -1 and x != -1:

	""" slicing new seqs for looping purpose"""
	seq = seqs[x:len(seqs)+1]

	"""starting codon"""
	

	""" y, y1, y2 value for different stop codon """
	y  = seq.find('TAA')
	y1 = seq.find('TAG')
	y2 = seq.find('TGA')

	""" create a dictionary for store y, y1, y2 values """
	d = dict()
	d[x]  = x+1
	d[y]  = y+3
	d[y1] = y1+3
	d[y2] = y2+3
	coord  = list(d.value())

	""" assigning locating value """
	c  = coord[0]
	c1 = coord[1] + 3
	c2 = coord[2] + 3
	c3 = coord[3] + 3

	""" three condition for storage information """
	if x - y  + 3 >= minu: 
		print(f'seq1\tDNA\t{coord[0]}\t{coord[1]}\t.\t+\t0\t{seq[c:c1]}')

	if x - y1 + 3 >= minu: 
		print(f'seq1\tDNA\t{coord[0]}\t{coord[1]}\t.\t+\t0\t{seq[c:c2]}')

	if x - y2 + 3 >= minu: 
		print(f'seq1\tDNA\t{coord[0]}\t{coord[1]}\t.\t+\t0\t{seq[c:c3]}')












